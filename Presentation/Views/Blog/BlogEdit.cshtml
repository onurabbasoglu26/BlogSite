@using Entity.Concrete
@model Blog
@{
    ViewData["Title"] = "BlogEdit";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

<h1>BlogEdit</h1>
@using (Html.BeginForm("BlogEdit", "Blog", FormMethod.Post))
{
    @Html.HiddenFor(x => x.BlogId)
    @Html.HiddenFor(x => x.BlogCreateDate)
    @Html.HiddenFor(x => x.BlogStatus)
    @Html.HiddenFor(x => x.WriterId)
    @Html.Label("Blog Başlığı:")
    @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogTitle, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Blog Görseli:")
    @Html.TextBoxFor(x => x.BlogImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogImage, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Blog Küçük Görsel:")
    @Html.TextBoxFor(x => x.BlogThumbnailImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogThumbnailImage, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Kategorisi:")
    @Html.DropDownListFor(x => x.CategoryId, (List<SelectListItem>)ViewBag.categoryList, new { @class = "form-control" })
    <br />
    @Html.Label("Blog İçeriği:")
    @Html.TextAreaFor(x => x.BlogContent, 10, 3, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogContent, "", new { @class = "text-danger" })
    <br />
    <button class="btn btn-primary">Kaydet</button>
}

