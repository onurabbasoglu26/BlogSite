@using Entity.Concrete
@model Writer
@{
    ViewData["Title"] = "WriterEditProfile";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

@using (Html.BeginForm("WriterEditProfile", "Writer", FormMethod.Post))
{
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Yazar Profil Sayfası</h4>
                <p class="card-description"> Bu sayfada profilinizi güncelleyebilirsiniz</p>
                <form class="forms-sample">
                    @Html.HiddenFor(x => x.WriterId)
                    <div class="form-group">
                        <label for="exampleInputName1">Ad-Soyad</label>
                        @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control", @id = "exampleInputName1", @type = "text" })
                        @Html.ValidationMessageFor(x => x.WriterName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail3">Mail</label>
                        @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control", @id = "exampleInputEmail3", @type = "email" })
                        @Html.ValidationMessageFor(x => x.WriterMail, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword4">Şifre</label>
                        @Html.PasswordFor(x => x.WriterPassword, new { @class = "form-control", @id = "exampleInputPassword4", @type = "password" })
                        @Html.ValidationMessageFor(x => x.WriterPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Şifrenizi Doğrulayın</label>
                        <input type="password" class="form-control" name="confirmPassword" placeholder="" required="">
                    </div>
                    <div class="form-group">
                        <label for="">Unvan</label>
                        @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control", @id = "", @type = "text" })
                        @Html.ValidationMessageFor(x => x.WriterTitle, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Yazar Görsel</label>
                        <input type="file" name="img[]" class="file-upload-default">
                        <div class="input-group col-xs-12">
                            <input type="text" class="form-control file-upload-info" disabled placeholder="Upload Image">
                            <span class="input-group-append">
                                <button class="file-upload-browse btn btn-gradient-primary" type="button">Resim Seç</button>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="exampleTextarea1">Yazar Hakkında</label>
                        @Html.TextAreaFor(x => x.WriterAbout, new { @class = "form-control", @id = "exampleTextarea1", @rows = "4" })
                        @Html.ValidationMessageFor(x => x.WriterAbout, "", new { @class = "text-danger" })
                    </div>
                    <button type="submit" class="btn btn-gradient-primary mr-2">Güncelle</button>
                    <button class="btn btn-light">İptal</button>
                </form>
            </div>
        </div>
    </div>
}
